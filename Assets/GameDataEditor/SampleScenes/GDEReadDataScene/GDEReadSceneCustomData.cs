// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by the Game Data Editor.
// 
//      Changes to this file will be lost if the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
using System.Collections.Generic;

using GameDataEditor;

namespace GameDataEditor
{
    public class GDEReadSceneCustomData : IGDEData
    {
        private static string descriptionKey = "description";
		private string _description;
        public string description
        {
            get { return _description; }
            set {
                if (_description != value)
                {
                    _description = value;
                    GDEDataManager.SetString(_key+"_"+descriptionKey, _description);
                }
            }
        }

        public GDEReadSceneCustomData()
		{
			_key = string.Empty;
		}

		public GDEReadSceneCustomData(string key)
		{
			_key = key;
		}
		
        public override void LoadFromDict(string dataKey, Dictionary<string, object> dict)
        {
            _key = dataKey;
			
			if (dict == null)
				LoadFromSavedData(dataKey);
			else
			{
                dict.TryGetString(descriptionKey, out _description);
                LoadFromSavedData(dataKey);
			}
		}

        public override void LoadFromSavedData(string dataKey)
		{
			_key = dataKey;
			
            _description = GDEDataManager.GetString(_key+"_"+descriptionKey, _description);
         }

        public void Reset_description()
        {
            GDEDataManager.ResetToDefault(_key, descriptionKey);

            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            dict.TryGetString(descriptionKey, out _description);
        }

        public void ResetAll()
        {
            GDEDataManager.ResetToDefault(_key, descriptionKey);


            Dictionary<string, object> dict;
            GDEDataManager.Get(_key, out dict);
            LoadFromDict(_key, dict);
        }
    }
}
